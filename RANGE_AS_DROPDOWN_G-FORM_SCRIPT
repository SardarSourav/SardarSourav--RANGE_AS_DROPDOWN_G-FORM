function populateFormFromSheet() {
  try {
    // Replace 'YOUR_FORM_URL' with your actual form URL
    var formUrl = 'https://docs.google.com/forms/d/1glCwAX5/edit';
    var form = FormApp.openByUrl(formUrl);

    // Replace 'YOUR_SHEET_URL' and 'YOUR_SHEET_NAME' with your actual sheet URL and sheet name
    var sheetUrl = 'https://docs.google.com/spreadsheets/d/18xOaAVe5sgH/edit?resourcekey#gid=838965824';
    var sheet = SpreadsheetApp.openByUrl(sheetUrl).getSheetByName('MAIN_');

     Logger.log('Unique Choices B: ' + JSON.stringify(uniqueChoicesB));
     Logger.log('Unique Choices C: ' + JSON.stringify(uniqueChoicesC));


    // Get the data in column B and C of the sheet
    var dataB = sheet.getRange("B2:B").getValues();
    var dataC = sheet.getRange("C2:C").getValues();

    // Get the form items
    var items = form.getItems();

    // Assuming the first and second items in the form are multiple-choice questions
    var firstQuestionItem = items[0];
    var secondQuestionItem = items[1];

    // Check if the items are multiple-choice questions
    if (
      firstQuestionItem.getType() === FormApp.ItemType.MULTIPLE_CHOICE &&
      secondQuestionItem.getType() === FormApp.ItemType.MULTIPLE_CHOICE
    ) {
      // Extract unique choices from the data (remove duplicates)
      var uniqueChoicesB = dataB.flat().filter(function (value) {
        return value !== "";
      });

      var uniqueChoicesC = dataC.flat().filter(function (value) {
        return value !== "";
      });

      // Set the choice values for the multiple-choice questions
      firstQuestionItem.asMultipleChoiceItem().setChoiceValues(uniqueChoicesB);
      secondQuestionItem.asMultipleChoiceItem().setChoiceValues(uniqueChoicesC);

      Logger.log('Form population completed successfully.');
    } else {
      Logger.log('Error: The first or second item in the form is not a multiple-choice question.');
    }
  } catch (error) {
    Logger.log('Error: ' + error.toString());
  }
}
